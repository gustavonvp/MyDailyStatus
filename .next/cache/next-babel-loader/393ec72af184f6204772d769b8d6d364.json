{"ast":null,"code":"function deg2rad(deg) {\n  return deg * Math.PI / 180;\n}\n\n;\nexport function distance(lat1, lon1, lat2, lon2) {\n  var RADIUSMILES = 3961,\n      RADIUSKILOMETERS = 6373,\n      latR1 = this.deg2rad(lat1),\n      lonR1 = this.deg2rad(lon1),\n      latR2 = this.deg2rad(lat2),\n      lonR2 = this.deg2rad(lon2),\n      latDifference = latR2 - latR1,\n      lonDifference = lonR2 - lonR1,\n      a = Math.pow(Math.sin(latDifference / 2), 2) + Math.cos(latR1) * Math.cos(latR2) * Math.pow(Math.sin(lonDifference / 2), 2),\n      c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n      dm = c * RADIUSMILES,\n      dk = c * RADIUSKILOMETERS;\n  this.mi = this.round(dm);\n  this.km = this.round(dk);\n}\n\nCalcRadiusDistance.prototype.round = function (x) {\n  return Math.round(x * 10) / 10;\n};","map":{"version":3,"sources":["C:/MyDailyStatus/lib/geo.js"],"names":["deg2rad","deg","Math","PI","distance","lat1","lon1","lat2","lon2","RADIUSMILES","RADIUSKILOMETERS","latR1","lonR1","latR2","lonR2","latDifference","lonDifference","a","pow","sin","cos","c","atan2","sqrt","dm","dk","mi","round","km","CalcRadiusDistance","prototype","x"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAClB,SAAOA,GAAG,GAAGC,IAAI,CAACC,EAAX,GAAc,GAArB;AACH;;AAAA;AAED,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AAC7C,MAAIC,WAAW,GAAG,IAAlB;AAAA,MACIC,gBAAgB,GAAG,IADvB;AAAA,MAEIC,KAAK,GAAG,KAAKX,OAAL,CAAaK,IAAb,CAFZ;AAAA,MAGIO,KAAK,GAAG,KAAKZ,OAAL,CAAaM,IAAb,CAHZ;AAAA,MAIIO,KAAK,GAAG,KAAKb,OAAL,CAAaO,IAAb,CAJZ;AAAA,MAKIO,KAAK,GAAG,KAAKd,OAAL,CAAaQ,IAAb,CALZ;AAAA,MAMIO,aAAa,GAAGF,KAAK,GAAGF,KAN5B;AAAA,MAOIK,aAAa,GAAGF,KAAK,GAAGF,KAP5B;AAAA,MAQIK,CAAC,GAAIf,IAAI,CAACgB,GAAL,CAAShB,IAAI,CAACiB,GAAL,CAASJ,aAAa,GAAG,CAAzB,CAAT,EAAsC,CAAtC,IAA2Cb,IAAI,CAACkB,GAAL,CAAST,KAAT,IAAkBT,IAAI,CAACkB,GAAL,CAASP,KAAT,CAAlB,GAAoCX,IAAI,CAACgB,GAAL,CAAShB,IAAI,CAACiB,GAAL,CAASH,aAAa,GAAG,CAAzB,CAAT,EAAsC,CAAtC,CARxF;AAAA,MASIK,CAAC,GAAI,IAAInB,IAAI,CAACoB,KAAL,CAAWpB,IAAI,CAACqB,IAAL,CAAUN,CAAV,CAAX,EAAyBf,IAAI,CAACqB,IAAL,CAAU,IAAIN,CAAd,CAAzB,CATb;AAAA,MAUIO,EAAE,GAAGH,CAAC,GAAGZ,WAVb;AAAA,MAWIgB,EAAE,GAAGJ,CAAC,GAAGX,gBAXb;AAYC,OAAKgB,EAAL,GAAU,KAAKC,KAAL,CAAWH,EAAX,CAAV;AACA,OAAKI,EAAL,GAAU,KAAKD,KAAL,CAAWF,EAAX,CAAV;AACJ;;AAEDI,kBAAkB,CAACC,SAAnB,CAA6BH,KAA7B,GAAqC,UAAUI,CAAV,EAAa;AAC9C,SAAO7B,IAAI,CAACyB,KAAL,CAAWI,CAAC,GAAG,EAAf,IAAqB,EAA5B;AACH,CAFD","sourcesContent":["function deg2rad(deg) {\r\n    return deg * Math.PI/180;\r\n};\r\n\r\nexport function distance(lat1, lon1, lat2, lon2) {\r\n    var RADIUSMILES = 3961,\r\n        RADIUSKILOMETERS = 6373,\r\n        latR1 = this.deg2rad(lat1),\r\n        lonR1 = this.deg2rad(lon1),\r\n        latR2 = this.deg2rad(lat2),\r\n        lonR2 = this.deg2rad(lon2),\r\n        latDifference = latR2 - latR1,\r\n        lonDifference = lonR2 - lonR1,\r\n        a  = Math.pow(Math.sin(latDifference / 2), 2) + Math.cos(latR1) * Math.cos(latR2) * Math.pow(Math.sin(lonDifference / 2), 2),\r\n        c  = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\r\n        dm = c * RADIUSMILES,\r\n        dk = c * RADIUSKILOMETERS;\r\n    \tthis.mi = this.round(dm);\r\n    \tthis.km = this.round(dk);\r\n}\r\n\r\nCalcRadiusDistance.prototype.round = function (x) {\r\n    return Math.round(x * 10) / 10;\r\n};"]},"metadata":{},"sourceType":"module"}