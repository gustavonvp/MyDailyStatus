{"ast":null,"code":"function getDistanceFromLatLonInKm(position1, position2) {\n  \"use strict\";\n\n  var deg2rad = function (deg) {\n    return deg * (Math.PI / 180);\n  },\n      R = 6371,\n      dLat = deg2rad(position2.lat - position1.lat),\n      dLng = deg2rad(position2.lng - position1.lng),\n      a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(position1.lat)) * Math.cos(deg2rad(position1.lat)) * Math.sin(dLng / 2) * Math.sin(dLng / 2),\n      c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  return (R * c * 1000).toFixed();\n}\n\nvar distancia = getDistanceFromLatLonInKm({\n  lat: -23.522490,\n  lng: -46.736600\n}, {\n  lat: -23.4446654,\n  lng: -46.5319316\n});","map":{"version":3,"sources":["C:/MyDailyStatus/lib/geo.js"],"names":["getDistanceFromLatLonInKm","position1","position2","deg2rad","deg","Math","PI","R","dLat","lat","dLng","lng","a","sin","cos","c","atan2","sqrt","toFixed","distancia"],"mappings":"AAAA,SAASA,yBAAT,CAAmCC,SAAnC,EAA8CC,SAA9C,EAAyD;AACrD;;AACA,MAAIC,OAAO,GAAG,UAAUC,GAAV,EAAe;AAAE,WAAOA,GAAG,IAAIC,IAAI,CAACC,EAAL,GAAU,GAAd,CAAV;AAA+B,GAA9D;AAAA,MACIC,CAAC,GAAG,IADR;AAAA,MAEIC,IAAI,GAAGL,OAAO,CAACD,SAAS,CAACO,GAAV,GAAgBR,SAAS,CAACQ,GAA3B,CAFlB;AAAA,MAGIC,IAAI,GAAGP,OAAO,CAACD,SAAS,CAACS,GAAV,GAAgBV,SAAS,CAACU,GAA3B,CAHlB;AAAA,MAIIC,CAAC,GAAGP,IAAI,CAACQ,GAAL,CAASL,IAAI,GAAG,CAAhB,IAAqBH,IAAI,CAACQ,GAAL,CAASL,IAAI,GAAG,CAAhB,CAArB,GACEH,IAAI,CAACS,GAAL,CAASX,OAAO,CAACF,SAAS,CAACQ,GAAX,CAAhB,IACAJ,IAAI,CAACS,GAAL,CAASX,OAAO,CAACF,SAAS,CAACQ,GAAX,CAAhB,CADA,GAEAJ,IAAI,CAACQ,GAAL,CAASH,IAAI,GAAG,CAAhB,CAFA,GAEqBL,IAAI,CAACQ,GAAL,CAASH,IAAI,GAAG,CAAhB,CAP/B;AAAA,MAQIK,CAAC,GAAG,IAAIV,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACY,IAAL,CAAUL,CAAV,CAAX,EAAyBP,IAAI,CAACY,IAAL,CAAU,IAAIL,CAAd,CAAzB,CARZ;;AASA,SAAQ,CAACL,CAAC,GAAGQ,CAAJ,GAAO,IAAR,EAAcG,OAAd,EAAR;AACH;;AAED,IAAIC,SAAS,GAAInB,yBAAyB,CACvC;AAACS,EAAAA,GAAG,EAAE,CAAC,SAAP;AAAkBE,EAAAA,GAAG,EAAE,CAAC;AAAxB,CADuC,EAEvC;AAACF,EAAAA,GAAG,EAAE,CAAC,UAAP;AAAmBE,EAAAA,GAAG,EAAE,CAAC;AAAzB,CAFuC,CAA1C","sourcesContent":["function getDistanceFromLatLonInKm(position1, position2) {\r\n    \"use strict\";\r\n    var deg2rad = function (deg) { return deg * (Math.PI / 180); },\r\n        R = 6371,\r\n        dLat = deg2rad(position2.lat - position1.lat),\r\n        dLng = deg2rad(position2.lng - position1.lng),\r\n        a = Math.sin(dLat / 2) * Math.sin(dLat / 2)\r\n            + Math.cos(deg2rad(position1.lat))\r\n            * Math.cos(deg2rad(position1.lat))\r\n            * Math.sin(dLng / 2) * Math.sin(dLng / 2),\r\n        c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    return ((R * c *1000).toFixed());\r\n}\r\n\r\nvar distancia = (getDistanceFromLatLonInKm(\r\n   {lat: -23.522490, lng: -46.736600},\r\n   {lat: -23.4446654, lng: -46.5319316}\r\n));"]},"metadata":{},"sourceType":"script"}