{"ast":null,"code":"export function distance(lat1, lon1, lat2, lon2) {\n  var RADIUSMILES = 3961,\n      RADIUSKILOMETERS = 6373,\n      latR1 = this.deg2rad(lat1),\n      lonR1 = this.deg2rad(lon1),\n      latR2 = this.deg2rad(lat2),\n      lonR2 = this.deg2rad(lon2),\n      latDifference = latR2 - latR1,\n      lonDifference = lonR2 - lonR1,\n      a = Math.pow(Math.sin(latDifference / 2), 2) + Math.cos(latR1) * Math.cos(latR2) * Math.pow(Math.sin(lonDifference / 2), 2),\n      c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\n      dm = c * RADIUSMILES,\n      dk = c * RADIUSKILOMETERS;\n  this.mi = this.round(dm);\n  this.km = this.round(dk);\n}\n\nCalcRadiusDistance.prototype.deg2rad = function (deg) {\n  var rad = deg * Math.PI / 180;\n  return rad;\n};\n\nCalcRadiusDistance.prototype.round = function (x) {\n  return Math.round(x * 10) / 10;\n};","map":{"version":3,"sources":["C:/MyDailyStatus/lib/geo.js"],"names":["distance","lat1","lon1","lat2","lon2","RADIUSMILES","RADIUSKILOMETERS","latR1","deg2rad","lonR1","latR2","lonR2","latDifference","lonDifference","a","Math","pow","sin","cos","c","atan2","sqrt","dm","dk","mi","round","km","CalcRadiusDistance","prototype","deg","rad","PI","x"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AAC7C,MAAIC,WAAW,GAAG,IAAlB;AAAA,MACIC,gBAAgB,GAAG,IADvB;AAAA,MAEIC,KAAK,GAAG,KAAKC,OAAL,CAAaP,IAAb,CAFZ;AAAA,MAGIQ,KAAK,GAAG,KAAKD,OAAL,CAAaN,IAAb,CAHZ;AAAA,MAIIQ,KAAK,GAAG,KAAKF,OAAL,CAAaL,IAAb,CAJZ;AAAA,MAKIQ,KAAK,GAAG,KAAKH,OAAL,CAAaJ,IAAb,CALZ;AAAA,MAMIQ,aAAa,GAAGF,KAAK,GAAGH,KAN5B;AAAA,MAOIM,aAAa,GAAGF,KAAK,GAAGF,KAP5B;AAAA,MAQIK,CAAC,GAAIC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASL,aAAa,GAAG,CAAzB,CAAT,EAAsC,CAAtC,IAA2CG,IAAI,CAACG,GAAL,CAASX,KAAT,IAAkBQ,IAAI,CAACG,GAAL,CAASR,KAAT,CAAlB,GAAoCK,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASJ,aAAa,GAAG,CAAzB,CAAT,EAAsC,CAAtC,CARxF;AAAA,MASIM,CAAC,GAAI,IAAIJ,IAAI,CAACK,KAAL,CAAWL,IAAI,CAACM,IAAL,CAAUP,CAAV,CAAX,EAAyBC,IAAI,CAACM,IAAL,CAAU,IAAIP,CAAd,CAAzB,CATb;AAAA,MAUIQ,EAAE,GAAGH,CAAC,GAAGd,WAVb;AAAA,MAWIkB,EAAE,GAAGJ,CAAC,GAAGb,gBAXb;AAYC,OAAKkB,EAAL,GAAU,KAAKC,KAAL,CAAWH,EAAX,CAAV;AACA,OAAKI,EAAL,GAAU,KAAKD,KAAL,CAAWF,EAAX,CAAV;AACJ;;AACDI,kBAAkB,CAACC,SAAnB,CAA6BpB,OAA7B,GAAuC,UAAUqB,GAAV,EAAe;AAClD,MAAIC,GAAG,GAAGD,GAAG,GAAGd,IAAI,CAACgB,EAAX,GAAgB,GAA1B;AACA,SAAOD,GAAP;AACH,CAHD;;AAIAH,kBAAkB,CAACC,SAAnB,CAA6BH,KAA7B,GAAqC,UAAUO,CAAV,EAAa;AAC9C,SAAOjB,IAAI,CAACU,KAAL,CAAWO,CAAC,GAAG,EAAf,IAAqB,EAA5B;AACH,CAFD","sourcesContent":["export function distance(lat1, lon1, lat2, lon2) {\r\n    var RADIUSMILES = 3961,\r\n        RADIUSKILOMETERS = 6373,\r\n        latR1 = this.deg2rad(lat1),\r\n        lonR1 = this.deg2rad(lon1),\r\n        latR2 = this.deg2rad(lat2),\r\n        lonR2 = this.deg2rad(lon2),\r\n        latDifference = latR2 - latR1,\r\n        lonDifference = lonR2 - lonR1,\r\n        a  = Math.pow(Math.sin(latDifference / 2), 2) + Math.cos(latR1) * Math.cos(latR2) * Math.pow(Math.sin(lonDifference / 2), 2),\r\n        c  = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)),\r\n        dm = c * RADIUSMILES,\r\n        dk = c * RADIUSKILOMETERS;\r\n    \tthis.mi = this.round(dm);\r\n    \tthis.km = this.round(dk);\r\n}\r\nCalcRadiusDistance.prototype.deg2rad = function (deg) {\r\n    var rad = deg * Math.PI / 180;\r\n    return rad;\r\n};\r\nCalcRadiusDistance.prototype.round = function (x) {\r\n    return Math.round(x * 10) / 10;\r\n};"]},"metadata":{},"sourceType":"module"}